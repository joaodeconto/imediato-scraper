name: Release (npm Trusted Publisher)

on:
  push:
    tags:
      - "v*.*.*"            # dispara ao fazer push de uma tag vX.Y.Z
  workflow_dispatch:
    inputs:
      mode:
        description: "publish or dry-run"
        required: true
        default: "dry-run"
        type: choice
        options: ["publish","dry-run"]

permissions:
  contents: read
  id-token: write          # OIDC para Trusted Publishing

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4          
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org/"
          always-auth: true
          # cache: "npm"     # cache do npm --- IGNORE ---
          

      # Instalação determinística; se não tiver package-lock.json, troque por `npm i`
      - name: Install
        run: npm i
        env: 
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}                

      - name: Verify tag matches package.json version
        if: ${{ github.event_name == 'push' }}
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          TAG="${GITHUB_REF#refs/tags/}"
          [ "v$PKG_VERSION" = "$TAG" ] || (echo "Tag ($TAG) != v$PKG_VERSION" && exit 1)

      # Publicação com OIDC (Trusted Publishing)
      - name: Publish (provenance)
        if: ${{ github.event_name == 'push' || inputs.mode == 'publish' }}
        run: npm publish
        env: 
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
       
      - name: Dry run
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.mode == 'dry-run' }}
        run: npm publish --dry-run
